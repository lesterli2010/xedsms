<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxdq.xedsms.db.model.StockstatusMapper" >
  <resultMap id="BaseResultMap" type="com.hxdq.xedsms.db.model.Stockstatus" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="incount" property="incount" jdbcType="INTEGER" />
    <result column="outcount" property="outcount" jdbcType="INTEGER" />
    <result column="remaincount" property="remaincount" jdbcType="INTEGER" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, incount, outcount, remaincount, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hxdq.xedsms.db.model.StockstatusExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stockstatus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stockstatus
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stockstatus
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hxdq.xedsms.db.model.StockstatusExample" >
    delete from stockstatus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hxdq.xedsms.db.model.Stockstatus" >
    insert into stockstatus (product_id, incount, outcount, 
      remaincount, updatetime)
    values (#{productId,jdbcType=INTEGER}, #{incount,jdbcType=INTEGER}, #{outcount,jdbcType=INTEGER}, 
      #{remaincount,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hxdq.xedsms.db.model.Stockstatus" >
    insert into stockstatus
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="incount != null" >
        incount,
      </if>
      <if test="outcount != null" >
        outcount,
      </if>
      <if test="remaincount != null" >
        remaincount,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="incount != null" >
        #{incount,jdbcType=INTEGER},
      </if>
      <if test="outcount != null" >
        #{outcount,jdbcType=INTEGER},
      </if>
      <if test="remaincount != null" >
        #{remaincount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hxdq.xedsms.db.model.StockstatusExample" resultType="java.lang.Integer" >
    select count(*) from stockstatus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stockstatus
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.incount != null" >
        incount = #{record.incount,jdbcType=INTEGER},
      </if>
      <if test="record.outcount != null" >
        outcount = #{record.outcount,jdbcType=INTEGER},
      </if>
      <if test="record.remaincount != null" >
        remaincount = #{record.remaincount,jdbcType=INTEGER},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stockstatus
    set product_id = #{record.productId,jdbcType=INTEGER},
      incount = #{record.incount,jdbcType=INTEGER},
      outcount = #{record.outcount,jdbcType=INTEGER},
      remaincount = #{record.remaincount,jdbcType=INTEGER},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxdq.xedsms.db.model.Stockstatus" >
    update stockstatus
    <set >
      <if test="incount != null" >
        incount = #{incount,jdbcType=INTEGER},
      </if>
      <if test="outcount != null" >
        outcount = #{outcount,jdbcType=INTEGER},
      </if>
      <if test="remaincount != null" >
        remaincount = #{remaincount,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxdq.xedsms.db.model.Stockstatus" >
    update stockstatus
    set incount = #{incount,jdbcType=INTEGER},
      outcount = #{outcount,jdbcType=INTEGER},
      remaincount = #{remaincount,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.hxdq.xedsms.db.model.StockstatusExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stockstatus
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>