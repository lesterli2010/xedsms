<?xml version="1.0" encoding="UTF-8"?>

	<!--
  - configuration for Spring Security 
  -
  -->


<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<global-method-security pre-post-annotations="enabled">
		<!--
			AspectJ pointcut expression that locates our "post" method and
			applies security that way <protect-pointcut expression="execution(*
			bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
		-->
	</global-method-security>

	<http use-expressions="true">
		<!--<intercept-url pattern="/main/create_user.zul" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/main/select_user.zul" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/main/add_customer.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/add_customer.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/customer_detail.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/select_cuctomer.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/select_saler.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER','ROLE_STOCKER')"/>
		-->
		<intercept-url pattern="/main/create_user.zul" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/main/select_user.zul" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/main/add_customer.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/select_customer.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/customer_detail.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/add_saler.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/select_saler.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER')"/>
		<intercept-url pattern="/main/instock_detail.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_STOCKER')"/>
		<intercept-url pattern="/main/instock.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_STOCKER')"/>
		<intercept-url pattern="/main/outstock.zul" access="hasAnyRole('ROLE_ADMIN','ROLE_STOCKER')"/>
		<intercept-url pattern="/main/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SALER','ROLE_STOCKER')" />
		
		<!-- 
			<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		-->
		<!--
			Disable web URI authorization, as we're using
			<global-method-security> and have @Secured the services layer instead
			<intercept-url pattern="/listAccounts.html" access="isRememberMe()"
			/> <intercept-url pattern="/post.html"
			access="hasRole('ROLE_TELLER')" />
		-->
		<intercept-url pattern="/**" access="permitAll" />

		<form-login login-page="/login.zul" authentication-failure-url="/login.zul?error=true"
			default-target-url="/main/main.zul"/>
		<logout />
		<remember-me />
		<!--
			Uncomment to enable X509 client authentication support <x509 />
		-->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/login.zul">
			<concurrency-control max-sessions="100"
				error-if-maximum-exceeded="true" />
		</session-management>

	</http>

	<!--
		Usernames/Passwords are rod/koala dianne/emu scott/wombat peter/opal
	-->
	<authentication-manager>
		<authentication-provider>
			            <password-encoder hash="md5"/>
<!--
			<user-service>
				<user name="1" password="1"
					authorities="ROLE_ADMIN" />
			</user-service>

			-->
				<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select userid,password,status as enabled
				from user where userid=?" authorities-by-username-query="select
				userid,authority from user_authority where userid=?" />
			
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/xedsms" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="NEWSYS" />
	</beans:bean>
</beans:beans>
