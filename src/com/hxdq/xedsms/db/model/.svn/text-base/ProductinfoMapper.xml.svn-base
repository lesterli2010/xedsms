<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hxdq.xedsms.db.model.ProductinfoMapper" >
  <resultMap id="BaseResultMap" type="com.hxdq.xedsms.db.model.Productinfo" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="dkspec_id" property="dkspecId" jdbcType="INTEGER" />
    <result column="spec_id" property="specId" jdbcType="INTEGER" />
    <result column="temp" property="temp" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, name, dkspec_id, spec_id, temp
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hxdq.xedsms.db.model.ProductinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from productinfo
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from productinfo
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hxdq.xedsms.db.model.ProductinfoExample" >
    delete from productinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hxdq.xedsms.db.model.Productinfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="productId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into productinfo (name, dkspec_id, spec_id, 
      temp)
    values (#{name,jdbcType=CHAR}, #{dkspecId,jdbcType=INTEGER}, #{specId,jdbcType=INTEGER}, 
      #{temp,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hxdq.xedsms.db.model.Productinfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="productId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into productinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="dkspecId != null" >
        dkspec_id,
      </if>
      <if test="specId != null" >
        spec_id,
      </if>
      <if test="temp != null" >
        temp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="dkspecId != null" >
        #{dkspecId,jdbcType=INTEGER},
      </if>
      <if test="specId != null" >
        #{specId,jdbcType=INTEGER},
      </if>
      <if test="temp != null" >
        #{temp,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hxdq.xedsms.db.model.ProductinfoExample" resultType="java.lang.Integer" >
    select count(*) from productinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update productinfo
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=CHAR},
      </if>
      <if test="record.dkspecId != null" >
        dkspec_id = #{record.dkspecId,jdbcType=INTEGER},
      </if>
      <if test="record.specId != null" >
        spec_id = #{record.specId,jdbcType=INTEGER},
      </if>
      <if test="record.temp != null" >
        temp = #{record.temp,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update productinfo
    set product_id = #{record.productId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=CHAR},
      dkspec_id = #{record.dkspecId,jdbcType=INTEGER},
      spec_id = #{record.specId,jdbcType=INTEGER},
      temp = #{record.temp,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxdq.xedsms.db.model.Productinfo" >
    update productinfo
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="dkspecId != null" >
        dkspec_id = #{dkspecId,jdbcType=INTEGER},
      </if>
      <if test="specId != null" >
        spec_id = #{specId,jdbcType=INTEGER},
      </if>
      <if test="temp != null" >
        temp = #{temp,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxdq.xedsms.db.model.Productinfo" >
    update productinfo
    set name = #{name,jdbcType=CHAR},
      dkspec_id = #{dkspecId,jdbcType=INTEGER},
      spec_id = #{specId,jdbcType=INTEGER},
      temp = #{temp,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.hxdq.xedsms.db.model.ProductinfoExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>